# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
#* * * * * /home/leo_zhang/miniconda3/envs/web_auto/bin/python /home/leo_zhang/Documents/GitHub/Tools/python_tools/scrapers/PeopleFirstCareers.py


* * * * * /home/leo_zhang/.dotnet/dotnet /home/leo_zhang/Documents/GitHub/Bots/dotnet_bot/test/dotnet_bot.dll > /tmp/dotnet_bot.log 2>&1


*/5 * * * * /home/leo_zhang/miniconda3/envs/web_auto/bin/python /home/leo_zhang/Documents/GitHub/Tools/python_tools/utils/delete_gmails.py > /tmp/delete_gmails.log 2>&1

# every day at noon
0 12 * * * crontab -l > ~/Documents/GitHub/Configs/Pop_OS/dotfiles/extras/cron/cron_contents.txt > /tmp/cron_contents_copying.log 2>&1

# keep configs up to date
*/30 * * * * ~/Documents/GitHub/Configs/Pop_OS/dotfiles/extras/cron/./cron_configs > /tmp/cron_config_copying.log 2>&1



